#Starting mongo
#mongo server
mongod
#begin mongo instance
mongo


#Remember the difference between DATABASES and COLLECTIONS


#Show all databases and collections w/in database
show dbs
use test_db
show collections

db.createUser({
	user:"adam",
	pwd:"1234",
	roles: [ "readWrite", "dbAdmin" ]
	});

# Create collections and capped collections, which sets a max size. Capped collections can not have documents removed.
db.createCollection('customers');
db.createCollection("customers", {capped: true, size: 5242880, max: 20000});

#Add a document to the collection
db.customers.insert({first_name:"George", last_name:"Washington"});

#Show all documents in a collection
db.customers.find();
db.customers.find().pretty(); # Shows the documents in a pretty way

#Add multiple documents to the array. Done with an array.
db.customers.insert([{first_name:"Thomas", last_name:"Jefferson"}, {first_name:"Alexander", last_name:"Hamilton, musical_status: yes"}]);

#Updating the documents. Will update all documents that match parameter
db.customers.update({first_name:"George"}, {first_name:"George", last_name:"Washington", musical_status:"Failure"});
#or use the set operator
db.customers.update({first_name:"Thomas"}, {$set:{age:45}});

#ability to increment numbers
db.customers.update(first_name:"Thomas", {$inc:{age:5}}); #amount incremented by

#unset parts of document
db.customers.update({first_name:"Thomas"}, {$unset:{age:1}});

#upsert to add new documents if none are found to update
db.customers.update({first_name:"James"}, {first_name:"James", last_name:"Maddison"}, {upsert: true});


#rename fields of document
db.customers.update({first_name:"George"},{$rename:{"musical_status":"alive"}});

#Remove documents. Will remove everything that matches the field so be careful.
db.custsomers.remove({first_name:"Alexander"});
#if only want to remove first document, then use
db.customers.remove({first_name:"Alexander"}, {justOne:true});
#Erase an entire collection
db.customers.drop()

#Find a specific document in db
db.customers.find({first_name:"George"});
#Find multiple documents
db.customers.find({$or:[first_name:{"George"}, first_name:{"Thomas"}]});

#Can use inequalities on fields (lt, lte, gt, gte)
db.customers.find({age:{$lt:40}});

#if you have a document with an array within it
#db.customers.insert(first_name:"Steven", address:{street:"5879 S Gallup St", city:"Littleton", state:"CO"});
db.customers.find({"address.city":"Littleton"});

#sorting results of a find
db.customers.find().sort({last_name:1}); #ascending order
db.customers.find().sort({last_name:-1}); #descending order

#count total number of documents
db.customers.find().count();
db.customers.find(gender:"male").count();

#Only reveal the topmost x elements
db.customers.find().limit(4);
db.customers.find().limit(4).sort({last_name:1});

#iterate through documents using for-each to print keys
db.customers.find().forEach(function(doc){print("Customer Name:" + doc.first_name)});

