# ansible-playbook -i hosts AWSsetup.yaml
# cd /mnt
# ssh -i Boaty-test.pem ec2-user@((PUT EC2 IPV4 HERE))
# is the ubuntu command to ssh into the EC2 instance
--- # tell ansible that it's a yaml file
- name: Create the database on EC2 server # name of playbook
  hosts: local # Where it runs from
  gather_facts: no # don't gather environment variables

  vars_files:
    - keys.yaml # Loaded files with AWS info

  tasks: # What it will do

    - name: Create EC2 instance # Name of task
      ec2: # What command is being executed
        key_name: Boaty-test # name of pem
        instance_type: t2.micro # instance size
        aws_access_key: "{{aws_access_key}}"
        aws_secret_key: "{{aws_secret_key}}"
        image: ami-d874e0a0 # What type of instance it will be
        wait: yes # wait to do other tasks until finished
        group: Test-wizard-16 # What security group it is under
        exact_count: 1 # How many instances are active
        count_tag: # What instances are being monitored
          Name: Boaty_Test
        instance_tags: # Tags to search for instance
          "Name": "4/28_Full_Mongo_Database"
          "Team Name": "Boat-y"
        region: us-west-2 # Region that instance is created in
      register: ec2_out # Output of instance variables

    # - debug:
    #     msg: "{{ec2_out}}" # this is how variables are used

    - name: Generate local_ip
      set_fact: # Sets a variable
        ec2_ip: "{{ec2_out['tagged_instances'][0]['public_ip']}}" # Gets the ip of the ec2 instance
        # ec2_ip: 35.163.154.156

    - name: Add a host to the group to_be_provisioned
      add_host: # Add a host for who will perform actions
        hostname: "{{ec2_ip}}" # The ip of the EC2 instance so the instance is the one doing this stuff
        ansible_ssh_private_key_file: Boaty-test.pem
        ansible_user: ec2-user
        groupname: to_be_provisioned
        with_items: ec2.instances

    - name: Wait for SSH # Need to wait for server to startup before ssh'ing into it
      wait_for:
        host: "{{ec2_ip}}" # Who is SSHing
        port: 22 # port for ssh
        state: started
        # delay: 10

    - name: Make a temp file # Canary to see if we are in the instance
      file:
        path: /home/ec2-user/test.txt # Where to make the file
        state: touch # What the instance is doing
      delegate_to: "{{ec2_ip}}" # What host is performing this action

- name: Setup Mongo and ElasticSearch
  hosts: to_be_provisioned # Performs actions on the EC2 instance, not locally.
  become: yes # use sudo

  tasks:

    - name: Configure yum to install mongo package at /etc/yum.repos.d/mongodb-org-3.6.repo # Create the yum config directory to designate how to install
      copy:
        dest: /etc/yum.repos.d/mongodb-org-3.6.repo # Destination repo
        force: no # Creates a new file if not there already.
        content: | # Content of yum config. Tells it where to go and what to do during install.
          [mongodb-org-3.6]
          name=MongoDB Repository
          baseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.6/x86_64/
          gpgcheck=1
          enabled=1
          gpgkey=https://www.mongodb.org/static/pgp/server-3.6.asc

    - name: Yum install mongo
      yum:
        name: mongodb-org # What the package name is
        state: latest # What version it should be installed as

    - name: Configure mongod.conf to change bindIp to 0.0.0.0
      replace:
        path: /etc/mongod.conf
        regexp: 'bindIp: 127.0.0.1'
        replace: 'bindIp: 0.0.0.0'

    - name: Start the mongod service
      service:
        name: mongod # name of service
        state: started # start the service

    - name: pip install billboard.py # Installing needed python modules
      pip:
        name: billboard.py

    - name: pip install pymongo # More modules
      pip:
        name: pymongo

    - name: Copy the python scripts to scrape billboard to the ec2 server
      copy: # copies from local machine to EC2 instance
        src: /mnt/d/BigDataStuff/boat-y/Billboard Parsing and Migration Into Mongo (Python)/BillBoard_To_Mongo_Python_scripts # local source file. Don't know how to only be in git repo.
        dest: /home/ec2-user # Destination file on EC2
      become: yes # I had to put this here again

    - name: run python script to populate database
      command: python BillBoard_To_Mongo_Python_scripts/Billboard_Parsing_Main.py


    # ELASTICSEARCH
    #
    # - name: Install Java 1.8.0
    #   yum:
    #     name: java-1.8.0
    #     state: latest
    #
    # - name: Remove Java 1.7.0
    #   yum:
    #     name: java-1.7.0-openjdk
    #     state: removed
    #
    # # - name: Install ElasticSearch RPM Package
    # #   get_url:
    # #     url: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.4.rpm
    # #     dest: /etc/yum.repos.d/elasticsearch.repo
    #
    # - name: Configure yum to install elasticSearch
    #   copy:
    #     dest: /etc/yum.repos.d/elasticsearch.repo
    #     force: no
    #     content: |
    #       [elasticsearch-6.x]
    #       name=Elasticsearch repository for 6.x packages
    #       baseurl=https://artifacts.elastic.co/packages/6.x/yum
    #       gpgcheck=1
    #       gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
    #       enabled=1
    #       autorefresh=1
    #       type=rpm-md
    #
    # - name: install elasticSearch
    #   yum:
    #     name: elasticsearch #-6.2.4.rpm -y
    #
    # - name: Register ElasticSearch as a system service
    #   command: chkconfig --add elasticsearch
    # #
    # # - name: Install AWS Cloud plugin
    # #   command: bin/elasticsearch-plugin install cloud-aws
    # #   args:
    # #     chdir: /usr/share/elasticsearch/
    # #
    # - name: Set ES_Heap_Size
    #   replace:
    #     path: /etc/sysconfig/elasticsearch
    #     regexp: '#ES_HEAP_SIZE=2g'
    #     replace: '#ES_HEAP_SIZE=0.5g'
    #
    # - name: Change ElasticSearch Xmx Setting
    #   replace:
    #     path: /etc/elasticsearch/jvm.options
    #     regexp: 'Xmx1g'
    #     replace: 'Xmx512m'
    #
    # - name: Change ElasticSearch Xms Setting
    #   replace:
    #     path: /etc/elasticsearch/jvm.options
    #     regexp: 'Xms1g'
    #     replace: 'Xms512m'
    #
    # - name: Start ElasticSearch Service
    #   service:
    #     name: elasticsearch
    #     state: started
    # # # curl localhost:9200/_cluster/health?pretty to check if server is running
    # #
    # # # MONGO-CONNECTOR
    # #
    # - name: Install Mongo-Connector
    #   pip:
    #     name: 'mongo-connector'
    #
    # - name: Install Mongo-Connector ElasticSearch package
    #   pip:
    #     name: 'mongo-connector[elastic5]'
    #   # mongo-connector -m localhost:27017 -t localhost:9200 -d elastic2_doc_manager
    #
    # - name: Create Directories for Replica Sets
    #   file:
    #     state: directory
    #     dest: /home/ec2-user/rs1
    #
    # - file:
    #     state: directory
    #     dest: /home/ec2-user/rs2
    #
    # - file:
    #     state: directory
    #     dest: /home/ec2-user/rs3
    # #
    # #
    # # - name: Create Mongo Replica Sets
    # #   shell: |
    # #     mongod --replSet bbtop100 --logpath "rs1/1.log" --dbpath rs1 --port 27017 &
    # #     mongod --replSet bbtop100 --logpath "rs2/2.log" --dbpath rs2 --port 27018 &
    # #     mongod --replSet bbtop100 --logpath "rs3/3.log" --dbpath rs3 --port 27019
    # #  # Use ps -ef | grep mongod to see if replica sets are active
    #
    # - name: Copy Mongo Replica Init File to EC2
    #   copy:
    #     dest: /home/ec2-user
    #     src: /mnt/d/BigDataStuff/boat-y/Ansible_Files/init_replicas.js


    # - name: Copy elastic_doc_manager to the EC2 instance
    #   copy:
    #     src: /mnt/d/BigDataStuff/boat-y/Ansible_Files/elastic_doc_manager.py
    #     # dest: /home/ec2-user
    #     dest: /usr/local/lib/python2.7/site-packages/mongo_connector/doc_managers/elastic_doc_manager.py
    #     force: no
    #   become: yes







    # - name: Configure yum to install logstash package at /etc/yum.repos.d/logstash.repo # Create the yum config directory to designate how to install
    #   copy:
    #     dest: /etc/yum.repos.d/logstash.repo # Destination repo
    #     force: no # Creates a new file if not there already.
    #     content: | # Content of yum config. Tells it where to go and what to do during install.
    #       [logstash-6.x]
    #       name=Elastic repository for 6.x packages
    #       baseurl=https://artifacts.elastic.co/packages/6.x/yum
    #       gpgcheck=1
    #       gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
    #       enabled=1
    #       autorefresh=1
    #       type=rpm-md
    #
    # - name: Install LogStash
    #   yum:
    #     name: logstash
    #     state: latest
